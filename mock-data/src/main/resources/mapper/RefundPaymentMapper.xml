<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="online.mwang.mockdata.mapper.RefundPaymentMapper">
  <resultMap id="BaseResultMap" type="online.mwang.mockdata.bean.RefundPayment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="out_trade_no" jdbcType="VARCHAR" property="outTradeNo" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="sku_id" jdbcType="BIGINT" property="skuId" />
    <result column="payment_type" jdbcType="VARCHAR" property="paymentType" />
    <result column="trade_no" jdbcType="VARCHAR" property="tradeNo" />
    <result column="total_amount" jdbcType="DECIMAL" property="totalAmount" />
    <result column="subject" jdbcType="VARCHAR" property="subject" />
    <result column="refund_status" jdbcType="VARCHAR" property="refundStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="callback_time" jdbcType="TIMESTAMP" property="callbackTime" />
    <result column="callback_content" jdbcType="VARCHAR" property="callbackContent" />
  </resultMap>
  <sql id="Base_Column_List">
    id, out_trade_no, order_id, sku_id, payment_type, trade_no, total_amount, subject, 
    refund_status, create_time, callback_time, callback_content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from refund_payment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from refund_payment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="online.mwang.mockdata.bean.RefundPayment" useGeneratedKeys="true">
    insert into refund_payment (out_trade_no, order_id, sku_id, 
      payment_type, trade_no, total_amount, 
      subject, refund_status, create_time, 
      callback_time, callback_content)
    values (#{outTradeNo,jdbcType=VARCHAR}, #{orderId,jdbcType=BIGINT}, #{skuId,jdbcType=BIGINT}, 
      #{paymentType,jdbcType=VARCHAR}, #{tradeNo,jdbcType=VARCHAR}, #{totalAmount,jdbcType=DECIMAL}, 
      #{subject,jdbcType=VARCHAR}, #{refundStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{callbackTime,jdbcType=TIMESTAMP}, #{callbackContent,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="online.mwang.mockdata.bean.RefundPayment" useGeneratedKeys="true">
    insert into refund_payment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="outTradeNo != null">
        out_trade_no,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="skuId != null">
        sku_id,
      </if>
      <if test="paymentType != null">
        payment_type,
      </if>
      <if test="tradeNo != null">
        trade_no,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="subject != null">
        subject,
      </if>
      <if test="refundStatus != null">
        refund_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="callbackTime != null">
        callback_time,
      </if>
      <if test="callbackContent != null">
        callback_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="outTradeNo != null">
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="skuId != null">
        #{skuId,jdbcType=BIGINT},
      </if>
      <if test="paymentType != null">
        #{paymentType,jdbcType=VARCHAR},
      </if>
      <if test="tradeNo != null">
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="subject != null">
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="refundStatus != null">
        #{refundStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="callbackTime != null">
        #{callbackTime,jdbcType=TIMESTAMP},
      </if>
      <if test="callbackContent != null">
        #{callbackContent,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="online.mwang.mockdata.bean.RefundPayment">
    update refund_payment
    <set>
      <if test="outTradeNo != null">
        out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="skuId != null">
        sku_id = #{skuId,jdbcType=BIGINT},
      </if>
      <if test="paymentType != null">
        payment_type = #{paymentType,jdbcType=VARCHAR},
      </if>
      <if test="tradeNo != null">
        trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="subject != null">
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="refundStatus != null">
        refund_status = #{refundStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="callbackTime != null">
        callback_time = #{callbackTime,jdbcType=TIMESTAMP},
      </if>
      <if test="callbackContent != null">
        callback_content = #{callbackContent,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="online.mwang.mockdata.bean.RefundPayment">
    update refund_payment
    set out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=BIGINT},
      sku_id = #{skuId,jdbcType=BIGINT},
      payment_type = #{paymentType,jdbcType=VARCHAR},
      trade_no = #{tradeNo,jdbcType=VARCHAR},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      subject = #{subject,jdbcType=VARCHAR},
      refund_status = #{refundStatus,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      callback_time = #{callbackTime,jdbcType=TIMESTAMP},
      callback_content = #{callbackContent,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>