<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="online.mwang.mockdata.mapper.OrderRefundInfoMapper">
  <resultMap id="BaseResultMap" type="online.mwang.mockdata.bean.OrderRefundInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="sku_id" jdbcType="BIGINT" property="skuId" />
    <result column="refund_type" jdbcType="VARCHAR" property="refundType" />
    <result column="refund_num" jdbcType="BIGINT" property="refundNum" />
    <result column="refund_amount" jdbcType="DECIMAL" property="refundAmount" />
    <result column="refund_reason_type" jdbcType="VARCHAR" property="refundReasonType" />
    <result column="refund_reason_txt" jdbcType="VARCHAR" property="refundReasonTxt" />
    <result column="refund_status" jdbcType="VARCHAR" property="refundStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, order_id, sku_id, refund_type, refund_num, refund_amount, refund_reason_type, 
    refund_reason_txt, refund_status, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_refund_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order_refund_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="online.mwang.mockdata.bean.OrderRefundInfo" useGeneratedKeys="true">
    insert into order_refund_info (user_id, order_id, sku_id, 
      refund_type, refund_num, refund_amount, 
      refund_reason_type, refund_reason_txt, refund_status, 
      create_time)
    values (#{userId,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, #{skuId,jdbcType=BIGINT}, 
      #{refundType,jdbcType=VARCHAR}, #{refundNum,jdbcType=BIGINT}, #{refundAmount,jdbcType=DECIMAL}, 
      #{refundReasonType,jdbcType=VARCHAR}, #{refundReasonTxt,jdbcType=VARCHAR}, #{refundStatus,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="online.mwang.mockdata.bean.OrderRefundInfo" useGeneratedKeys="true">
    insert into order_refund_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="skuId != null">
        sku_id,
      </if>
      <if test="refundType != null">
        refund_type,
      </if>
      <if test="refundNum != null">
        refund_num,
      </if>
      <if test="refundAmount != null">
        refund_amount,
      </if>
      <if test="refundReasonType != null">
        refund_reason_type,
      </if>
      <if test="refundReasonTxt != null">
        refund_reason_txt,
      </if>
      <if test="refundStatus != null">
        refund_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="skuId != null">
        #{skuId,jdbcType=BIGINT},
      </if>
      <if test="refundType != null">
        #{refundType,jdbcType=VARCHAR},
      </if>
      <if test="refundNum != null">
        #{refundNum,jdbcType=BIGINT},
      </if>
      <if test="refundAmount != null">
        #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundReasonType != null">
        #{refundReasonType,jdbcType=VARCHAR},
      </if>
      <if test="refundReasonTxt != null">
        #{refundReasonTxt,jdbcType=VARCHAR},
      </if>
      <if test="refundStatus != null">
        #{refundStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="online.mwang.mockdata.bean.OrderRefundInfo">
    update order_refund_info
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="skuId != null">
        sku_id = #{skuId,jdbcType=BIGINT},
      </if>
      <if test="refundType != null">
        refund_type = #{refundType,jdbcType=VARCHAR},
      </if>
      <if test="refundNum != null">
        refund_num = #{refundNum,jdbcType=BIGINT},
      </if>
      <if test="refundAmount != null">
        refund_amount = #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundReasonType != null">
        refund_reason_type = #{refundReasonType,jdbcType=VARCHAR},
      </if>
      <if test="refundReasonTxt != null">
        refund_reason_txt = #{refundReasonTxt,jdbcType=VARCHAR},
      </if>
      <if test="refundStatus != null">
        refund_status = #{refundStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="online.mwang.mockdata.bean.OrderRefundInfo">
    update order_refund_info
    set user_id = #{userId,jdbcType=BIGINT},
      order_id = #{orderId,jdbcType=BIGINT},
      sku_id = #{skuId,jdbcType=BIGINT},
      refund_type = #{refundType,jdbcType=VARCHAR},
      refund_num = #{refundNum,jdbcType=BIGINT},
      refund_amount = #{refundAmount,jdbcType=DECIMAL},
      refund_reason_type = #{refundReasonType,jdbcType=VARCHAR},
      refund_reason_txt = #{refundReasonTxt,jdbcType=VARCHAR},
      refund_status = #{refundStatus,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>